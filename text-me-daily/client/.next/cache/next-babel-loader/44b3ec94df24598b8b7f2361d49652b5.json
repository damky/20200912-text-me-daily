{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nexport function handleAuth(ctx) {\n  _s();\n\n  // set up cookies\n  var cookies = new Cookies();\n  var token = null; // if context has request info aka Server Side\n\n  if (ctx.req) {\n    // ugly way to get cookie value from a string of values\n    // good enough for demostration\n    token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n  } else {\n    // we dont have request info aka Client Side\n    token = cookies.get('token');\n  }\n\n  var fetcher = function fetcher(url) {\n    return axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  };\n\n  var _useSWR = useSWR(\"\".concat(process.env.SERVER, \"/api/ping\"), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) {\n    console.log(error.response.data.msg);\n    console.log(\"redirecting back to main page\");\n\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/'\n      });\n      ctx.res.end();\n    } else {\n      Router.push('/');\n    }\n\n    return false;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  console.log(\"token ping:\", data.msg);\n  return true;\n}\n\n_s(handleAuth, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/utils/auth.js"],"names":["Cookies","useSWR","axios","handleAuth","ctx","cookies","token","req","headers","cookie","replace","get","fetcher","url","process","env","SERVER","data","error","console","log","response","msg","res","writeHead","Location","end","Router","push"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAAA;;AAC9B;AACA,MAAMC,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AACA,MAAIM,KAAK,GAAG,IAAZ,CAH8B,CAK9B;;AACA,MAAIF,GAAG,CAACG,GAAR,EAAa;AACX;AACA;AACAD,IAAAA,KAAK,GAAGF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+B,8CAA/B,EAA+E,IAA/E,CAAR;AACD,GAJD,MAKK;AACH;AACAJ,IAAAA,KAAK,GAAGD,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAR;AACD;;AAED,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,WAAIX,KAAK,CAACS,GAAN,CAAUE,GAAV,EAAe;AAAEL,MAAAA,OAAO,EAAE;AAAE,yBAAiBF;AAAnB;AAAX,KAAf,CAAJ;AAAA,GAAnB;;AAhB8B,gBAiBNL,MAAM,WAAIa,OAAO,CAACC,GAAR,CAAYC,MAAhB,gBAAmCJ,OAAnC,CAjBA;AAAA,MAiBtBK,IAjBsB,WAiBtBA,IAjBsB;AAAA,MAiBhBC,KAjBgB,WAiBhBA,KAjBgB;;AAkB9B,MAAIA,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBK,GAAhC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,QAAIhB,GAAG,CAACmB,GAAR,EAAa;AACXnB,MAAAA,GAAG,CAACmB,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,QAAAA,QAAQ,EAAE;AADW,OAAvB;AAGArB,MAAAA,GAAG,CAACmB,GAAJ,CAAQG,GAAR;AACD,KALD,MAKO;AACLC,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;;AACD,WAAO,KAAP;AACD;;AACD,MAAI,CAACX,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAAI,CAACK,GAAhC;AACA,SAAO,IAAP;AACD;;GArCenB,U;UAiBUF,M","sourcesContent":["import { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nexport function handleAuth(ctx) {\n  // set up cookies\n  const cookies = new Cookies();\n  let token = null;\n\n  // if context has request info aka Server Side\n  if (ctx.req) {\n    // ugly way to get cookie value from a string of values\n    // good enough for demostration\n    token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n  }\n  else {\n    // we dont have request info aka Client Side\n    token = cookies.get('token')\n  }\n\n  const fetcher = url => axios.get(url, { headers: { 'Authorization': token } });\n  const { data, error } = useSWR(`${process.env.SERVER}/api/ping`, fetcher);\n  if (error) {\n    console.log(error.response.data.msg);\n    console.log(\"redirecting back to main page\");\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/'\n      })\n      ctx.res.end()\n    } else {\n      Router.push('/')\n    }\n    return false;\n  }\n  if (!data) {\n    return null;\n  }\n\n  console.log(\"token ping:\", data.msg);\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}