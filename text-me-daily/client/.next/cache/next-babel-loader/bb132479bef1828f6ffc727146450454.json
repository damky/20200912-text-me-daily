{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nexport function handleAuth() {\n  _s();\n\n  // set up cookies\n  var cookies = new Cookies();\n\n  var fetcher = function fetcher(url) {\n    return axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  };\n\n  var _useSWR = useSWR(\"\".concat(process.env.SERVER, \"/api/ping\"), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) {\n    return false;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  console.log(\"token ping:\", data.msg);\n  return true;\n}\n\n_s(handleAuth, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/utils/auth.js"],"names":["Cookies","useSWR","axios","handleAuth","cookies","fetcher","url","get","headers","token","process","env","SERVER","data","error","console","log","msg"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B;AACA,MAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;;AACA,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,WAAIJ,KAAK,CAACK,GAAN,CAAUD,GAAV,EAAe;AAAEE,MAAAA,OAAO,EAAE;AAAE,yBAAiBC;AAAnB;AAAX,KAAf,CAAJ;AAAA,GAAnB;;AAH2B,gBAIHR,MAAM,WAAIS,OAAO,CAACC,GAAR,CAAYC,MAAhB,gBAAmCP,OAAnC,CAJH;AAAA,MAInBQ,IAJmB,WAInBA,IAJmB;AAAA,MAIbC,KAJa,WAIbA,KAJa;;AAK3B,MAAIA,KAAJ,EAAW;AACT,WAAO,KAAP;AACD;;AACD,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAAI,CAACI,GAAhC;AACA,SAAO,IAAP;AACD;;GAded,U;UAIUF,M","sourcesContent":["import { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\n\nexport function handleAuth() {\n  // set up cookies\n  const cookies = new Cookies();\n  const fetcher = url => axios.get(url, { headers: { 'Authorization': token } });\n  const { data, error } = useSWR(`${process.env.SERVER}/api/ping`, fetcher);\n  if (error) {\n    return false;\n  }\n  if (!data) {\n    return null;\n  }\n\n  console.log(\"token ping:\", data.msg);\n  return true;\n}"]},"metadata":{},"sourceType":"module"}