{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/signIn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Btn from './btn';\nexport function ErrorMsg(_ref) {\n  var key = _ref.key,\n      children = _ref.children;\n  return __jsx(\"div\", {\n    key: key,\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  }, children);\n}\n_c = ErrorMsg;\nexport default function SignIn() {\n  var _this = this;\n\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.email) {\n        errors.email = 'email required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'password required';\n      } else if (!/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n        errors.password = [];\n\n        if (!/(?=.*\\d)/.test(values.password)) {\n          errors.password.push('numbers');\n        } else {\n          errors.password = errors.password.filter(function (m) {\n            return m !== 'numbers';\n          });\n        }\n\n        if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/.test(values.password)) {\n          errors.password.push('special characters');\n        } else {\n          errors.password = errors.password.filter(function (m) {\n            return m !== 'special characters';\n          });\n        }\n\n        if (!/(?=.*[a-z])/.test(values.password)) {\n          errors.password.push('lowercase');\n        } else {\n          errors.password = errors.password.filter(function (m) {\n            return m !== 'lowercase';\n          });\n        }\n\n        if (!/(?=.*[A-Z])/.test(values.password)) {\n          errors.password.push('uppercase');\n        } else {\n          errors.password = errors.password.filter(function (m) {\n            return m !== 'uppercase';\n          });\n        }\n\n        if (!/.{8,}/.test(values.password)) {\n          errors.password.push('at least 8');\n        } else {\n          errors.password = errors.password.filter(function (m) {\n            return m !== 'at least 8';\n          });\n        }\n\n        errors.password = errors.password.join(',');\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      // checkCredentials(values);\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(Field, {\n      placeholder: \"email\",\n      className: \"primary\",\n      type: \"email\",\n      name: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"email\",\n      render: function render(msg) {\n        return __jsx(ErrorMsg, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 55\n          }\n        }, msg);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), __jsx(Field, {\n      placeholder: \"password\",\n      className: \"primary\",\n      type: \"password\",\n      name: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"password\",\n      render: function render(msg) {\n        return msg.split(',').map(function (m) {\n          return __jsx(ErrorMsg, {\n            key: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 82\n            }\n          }, m);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), __jsx(Btn, {\n      primary: true,\n      submit: true,\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"sign in\"));\n  }));\n}\n_c2 = SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMsg\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/signIn.js"],"names":["Formik","Form","Field","ErrorMessage","Btn","ErrorMsg","key","children","SignIn","email","password","values","errors","test","push","filter","m","join","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","msg","split","map"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik'\nimport Btn from './btn';\n\nexport function ErrorMsg({ key, children }) {\n  return <div key={key} className=\"errorMsg\">{children}</div>\n}\n\nexport default function SignIn() {\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'email required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'password required'\n          } else if (!/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n            errors.password = [];\n            if (!/(?=.*\\d)/.test(values.password)) {\n              errors.password.push('numbers')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'numbers');\n            }\n            if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/.test(values.password)) {\n              errors.password.push('special characters')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'special characters');\n            }\n            if (!/(?=.*[a-z])/.test(values.password)) {\n              errors.password.push('lowercase')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'lowercase');\n            }\n            if (!/(?=.*[A-Z])/.test(values.password)) {\n              errors.password.push('uppercase')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'uppercase');\n            }\n            if (!/.{8,}/.test(values.password)) {\n              errors.password.push('at least 8')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'at least 8');\n            }\n            errors.password = errors.password.join(',')\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          // checkCredentials(values);\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field\n              placeholder=\"email\"\n              className=\"primary\"\n              type=\"email\"\n              name=\"email\"\n            />\n            <ErrorMessage name=\"email\" render={msg => <ErrorMsg>{msg}</ErrorMsg>} />\n            <Field\n              placeholder=\"password\"\n              className=\"primary\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage name=\"password\" render={msg => msg.split(',').map(m => <ErrorMsg key>{m}</ErrorMsg>)} />\n            <Btn primary submit disabled={isSubmitting}>\n              sign in\n            </Btn>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}