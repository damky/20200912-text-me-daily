{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/dashboard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Btn from '../components/btn'; // set up cookies\n\nexport default function Dashboard(ctx) {\n  const cookies = new Cookies();\n  const token = cookies.get('token');\n\n  const logOut = () => {\n    // cookies.remove('token', null);\n    // cookies.remove('refreshToken', null);\n    cookies.remove('status', null);\n    Router.push('/');\n  };\n\n  const refreshToken = () => {\n    console.log(cookies.get('refreshToken'));\n    axios.post(`${ctx.serverUrl}/api/token`, {\n      refreshToken: cookies.get('refreshToken')\n    }, {\n      headers: {\n        'Authorization': token\n      }\n    }).then(res => cookies.set('token', res.token) && console.log(res)).catch(err => {\n      if (err) console.error(err);\n    });\n  };\n\n  const fetcherAuth = url => axios.get(url, {\n    headers: {\n      'Authorization': token\n    }\n  }).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR(`${ctx.serverUrl}/api/ping`, fetcherAuth);\n\n  if (error) {\n    // console.error(error.response.data.msg)\n    cookies.remove('status', null);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"error loading. probably need to login again.\"), __jsx(Btn, {\n      primary: true,\n      onClick: () => refreshToken(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"refresh\"));\n  }\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, \"secret page\"), \" \", __jsx(Btn, {\n    primary: true,\n    onClick: () => logOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }, \"log out\"), __jsx(Btn, {\n    primary: true,\n    onClick: () => refreshToken(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 82\n    }\n  }, \"refresh\"), JSON.stringify(data));\n}\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/dashboard.js"],"names":["Cookies","useSWR","axios","Router","Btn","Dashboard","ctx","cookies","token","get","logOut","remove","push","refreshToken","console","log","post","serverUrl","headers","then","res","set","catch","err","error","fetcherAuth","url","data","JSON","stringify","getStaticProps","props","process","env","SERVER"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CAEA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,QAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;AACA,QAAMQ,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;;AAEA,QAAMC,MAAM,GAAG,MAAM;AACnB;AACA;AACAH,IAAAA,OAAO,CAACI,MAAR,CAAe,QAAf,EAAyB,IAAzB;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACD,GALD;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACE,GAAR,CAAY,cAAZ,CAAZ;AACAP,IAAAA,KAAK,CAACc,IAAN,CAAY,GAAEV,GAAG,CAACW,SAAU,YAA5B,EAAyC;AAAEJ,MAAAA,YAAY,EAAEN,OAAO,CAACE,GAAR,CAAY,cAAZ;AAAhB,KAAzC,EAAwF;AAAES,MAAAA,OAAO,EAAE;AAAE,yBAAiBV;AAAnB;AAAX,KAAxF,EACGW,IADH,CACQC,GAAG,IAAIb,OAAO,CAACc,GAAR,CAAY,OAAZ,EAAqBD,GAAG,CAACZ,KAAzB,KAAmCM,OAAO,CAACC,GAAR,CAAYK,GAAZ,CADlD,EAEGE,KAFH,CAESC,GAAG,IAAI;AAAE,UAAIA,GAAJ,EAAST,OAAO,CAACU,KAAR,CAAcD,GAAd;AAAoB,KAF/C;AAGD,GALD;;AAOA,QAAME,WAAW,GAAGC,GAAG,IAAIxB,KAAK,CAACO,GAAN,CAAUiB,GAAV,EAAe;AAAER,IAAAA,OAAO,EAAE;AAAE,uBAAiBV;AAAnB;AAAX,GAAf,EAAwDW,IAAxD,CAA6DC,GAAG,IAAIA,GAAG,CAACO,IAAxE,CAA3B;;AACA,QAAM;AAAEA,IAAAA,IAAF;AAAQH,IAAAA;AAAR,MAAkBvB,MAAM,CAAE,GAAEK,GAAG,CAACW,SAAU,WAAlB,EAA8BQ,WAA9B,CAA9B;;AACA,MAAID,KAAJ,EAAW;AACT;AACAjB,IAAAA,OAAO,CAACI,MAAR,CAAe,QAAf,EAAyB,IAAzB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,EAEE,MAAC,GAAD;AAAK,MAAA,OAAO,MAAZ;AAAa,MAAA,OAAO,EAAE,MAAME,YAAY,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAMD;;AACD,MAAI,CAACc,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,OAA0B,MAAC,GAAD;AAAK,IAAA,OAAO,MAAZ;AAAa,IAAA,OAAO,EAAE,MAAMjB,MAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B,EAA6E,MAAC,GAAD;AAAK,IAAA,OAAO,MAAZ;AAAa,IAAA,OAAO,EAAE,MAAMG,YAAY,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7E,EAAuIe,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAvI,CADF;AAGD;AAED,OAAO,eAAeG,cAAf,CAA8BxB,GAA9B,EAAmC;AACxC,SAAO;AACLyB,IAAAA,KAAK,EAAE;AACLd,MAAAA,SAAS,EAAEe,OAAO,CAACC,GAAR,CAAYC;AADlB;AADF,GAAP;AAKD","sourcesContent":["import { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Btn from '../components/btn'\n\n// set up cookies\n\nexport default function Dashboard(ctx) {\n  const cookies = new Cookies();\n  const token = cookies.get('token');\n\n  const logOut = () => {\n    // cookies.remove('token', null);\n    // cookies.remove('refreshToken', null);\n    cookies.remove('status', null);\n    Router.push('/');\n  }\n\n  const refreshToken = () => {\n    console.log(cookies.get('refreshToken'));\n    axios.post(`${ctx.serverUrl}/api/token`, { refreshToken: cookies.get('refreshToken') }, { headers: { 'Authorization': token } })\n      .then(res => cookies.set('token', res.token) && console.log(res))\n      .catch(err => { if (err) console.error(err) });\n  }\n\n  const fetcherAuth = url => axios.get(url, { headers: { 'Authorization': token } }).then(res => res.data);\n  const { data, error } = useSWR(`${ctx.serverUrl}/api/ping`, fetcherAuth);\n  if (error) {\n    // console.error(error.response.data.msg)\n    cookies.remove('status', null);\n    return (\n      <div>\n        <div>error loading. probably need to login again.</div>\n        <Btn primary onClick={() => refreshToken()}>refresh</Btn>\n      </div>\n    )\n  }\n  if (!data) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div><h2>secret page</h2> <Btn primary onClick={() => logOut()}>log out</Btn><Btn primary onClick={() => refreshToken()}>refresh</Btn>{JSON.stringify(data)}</div>\n  )\n}\n\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}