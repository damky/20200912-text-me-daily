{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { Cookies } from \"react-cookie\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport { processEnv } from 'next/dist/lib/load-env-config';\n\nconst fetcher = url => axios.get(url).then(res => res.data);\n\nexport function Mongo() {\n  const {\n    data,\n    error\n  } = useSWR('/api/login', fetch);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, \"loading...\"); // render data\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"hello \", data);\n}\nexport default function Home() {\n  const serverUrl = `${process.env.NEXT_PUBLIC_SERVER}`;\n  console.log('server url', serverUrl, '\\ntest', process.env.NEXT_PUBLIC_TEST); // set up cookies\n\n  const cookies = new Cookies();\n  const {\n    0: token,\n    1: setToken\n  } = useState(cookies.get('token') || null);\n  const {\n    data,\n    error\n  } = useSWR(serverUrl + '/api/login', fetcher);\n  if (error) return 'failed to load token';\n  if (!data) return 'loading...';\n  console.log('data token ', data.token);\n  const theToken = data.token;\n  cookies.set('token', theToken);\n  return __jsx(Layout, {\n    home: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, siteTitle)), __jsx(\"section\", {\n    className: utilStyles.headingMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"I'm Doug McKay\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"(This is a sample website - you\\u2019ll be building a site like this on\", ' ', __jsx(\"a\", {\n    href: \"https://nextjs.org/learn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"our Next.js tutorial\"), \".)\"), __jsx(\"button\", {\n    onClick: () => setToken(theToken),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Get Token\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Token: \", JSON.stringify(token)), __jsx(Link, {\n    href: \"/secret\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }\n  }, \"Secret Page\"))));\n}","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/index.js"],"names":["React","useState","Head","Link","Layout","siteTitle","utilStyles","Cookies","useSWR","axios","processEnv","fetcher","url","get","then","res","data","Mongo","error","fetch","Home","serverUrl","process","env","NEXT_PUBLIC_SERVER","console","log","NEXT_PUBLIC_TEST","cookies","token","setToken","theToken","set","headingMd","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { Cookies } from \"react-cookie\";\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport { processEnv } from 'next/dist/lib/load-env-config';\n\nconst fetcher = url => axios.get(url).then(res => res.data);\n\nexport function Mongo() {\n  const { data, error } = useSWR('/api/login', fetch);\n\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n\n  // render data\n  return <div>hello {data}</div>\n}\n\nexport default function Home() {\n  const serverUrl = `${process.env.NEXT_PUBLIC_SERVER}`;\n  console.log('server url', serverUrl, '\\ntest', process.env.NEXT_PUBLIC_TEST);\n  // set up cookies\n  const cookies = new Cookies();\n  const [token, setToken] = useState(cookies.get('token') || null);\n  const { data, error } = useSWR(serverUrl + '/api/login', fetcher);\n  if (error) return 'failed to load token';\n  if (!data) return 'loading...';\n\n  console.log('data token ', data.token);\n  const theToken = data.token;\n  cookies.set('token', theToken);\n\n\n  return (\n    <Layout home>\n      <Head>\n        <title>{siteTitle}</title>\n      </Head>\n      <section className={utilStyles.headingMd}>\n        <p>I'm Doug McKay</p>\n        <p>\n          (This is a sample website - youâ€™ll be building a site like this on{' '}\n          <a href=\"https://nextjs.org/learn\">our Next.js tutorial</a>.)\n        </p>\n        <button onClick={() => setToken(theToken)}>Get Token</button>\n        <p>Token: {JSON.stringify(token)}</p>\n        <Link href=\"/secret\"><a>Secret Page</a></Link>\n      </section>\n    </Layout>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}