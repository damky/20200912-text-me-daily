{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/signIn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Btn from './btn';\nimport { Cookies } from \"react-cookie\";\nexport function ErrorMsg({\n  children\n}) {\n  return __jsx(\"div\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport function Mongo({\n  serverUrl\n}) {\n  const fetcher = url => fetch(``, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  }).then(res => res.json());\n\n  const {\n    data,\n    error\n  } = useSWR(serverUrl + '/api/createuser', fetcher);\n\n  if (error) {\n    console.error(error);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"problem\");\n  }\n\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"loading...\"); // render data\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, \"added user. \", data);\n}\nexport default function SignIn({\n  signin,\n  signup,\n  serverUrl\n}) {\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'email required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'password required';\n      } else if (signup && !/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([a-z]|[A-Z]|[0-9]|[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n        errors.password = ['needs to add:'];\n\n        if (!/(?=.*\\d)/.test(values.password)) {\n          errors.password.push('numbers');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'numbers');\n        }\n\n        if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/.test(values.password)) {\n          if (errors.password.findIndex(m => m === 'special characters') === -1) {\n            errors.password.push('special characters');\n          }\n        } else {\n          errors.password = errors.password.filter(m => m !== 'special characters');\n        }\n\n        if (!/(?=.*[a-z])/.test(values.password)) {\n          errors.password.push('lowercase');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'lowercase');\n        }\n\n        if (!/(?=.*[A-Z])/.test(values.password)) {\n          errors.password.push('uppercase');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'uppercase');\n        }\n\n        if (!/.{8,}/.test(values.password)) {\n          errors.password.push('at least 8');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'at least 8');\n        }\n\n        errors.password = errors.password.join(',');\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      signin && setTimeout(() => {\n        goToUser(serverUrl, values);\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n      signup && setTimeout(() => {\n        createUser(serverUrl, values);\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Field, {\n    placeholder: \"email\",\n    className: \"primary\",\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"email\",\n    render: msg => __jsx(ErrorMsg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 55\n      }\n    }, msg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), __jsx(Field, {\n    placeholder: \"password\",\n    className: \"primary\",\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"password\",\n    render: msg => msg.split(',').map(m => __jsx(ErrorMsg, {\n      key: m,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 82\n      }\n    }, m)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), __jsx(Btn, {\n    name: \"submit\",\n    primary: true,\n    submit: true,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, signin && 'sign in' || signup && 'sign up'), __jsx(ErrorMessage, {\n    name: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))));\n}\nexport async function createUser(serverUrl, values) {\n  // send data to db\n  const res = await fetch(`${serverUrl}/api/createuser`, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(values)\n  });\n  const data = await res.json();\n\n  try {\n    console.log('Success:', data);\n  } catch (err) {\n    console.error(err);\n  }\n}\nexport async function goToUser(serverUrl, values) {}\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/components/signIn.js"],"names":["Formik","Form","Field","ErrorMessage","Btn","Cookies","ErrorMsg","children","Mongo","serverUrl","fetcher","url","fetch","method","headers","body","JSON","stringify","values","then","res","json","data","error","useSWR","console","SignIn","signin","signup","email","password","errors","test","push","filter","m","findIndex","join","setSubmitting","setTimeout","goToUser","alert","createUser","isSubmitting","msg","split","map","log","err","getStaticProps","ctx","props","process","env","SERVER"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik'\nimport Btn from './btn';\nimport { Cookies } from \"react-cookie\";\n\nexport function ErrorMsg({ children }) {\n  return <div className=\"errorMsg\">{children}</div>\n}\n\nexport function Mongo({ serverUrl }) {\n  const fetcher = (url) => fetch(``, {\n    method: \"POST\",\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(values)\n  }).then(res => res.json());\n  const { data, error } = useSWR(serverUrl + '/api/createuser', fetcher);\n\n  if (error) {\n    console.error(error);\n    return <div>problem</div>\n  }\n  if (!data) return <div>loading...</div>\n\n  // render data\n  return <div>added user. {data}</div>\n}\n\nexport default function SignIn({ signin, signup, serverUrl }) {\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'email required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'password required'\n          } else if (signup && !/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([a-z]|[A-Z]|[0-9]|[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n            errors.password = ['needs to add:'];\n            if (!/(?=.*\\d)/.test(values.password)) {\n              errors.password.push('numbers')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'numbers');\n            }\n            if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/.test(values.password)) {\n              if (errors.password.findIndex(m => m === 'special characters') === -1) {\n                errors.password.push('special characters');\n              }\n            } else {\n              errors.password = errors.password.filter(m => m !== 'special characters');\n            }\n            if (!/(?=.*[a-z])/.test(values.password)) {\n              errors.password.push('lowercase')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'lowercase');\n            }\n            if (!/(?=.*[A-Z])/.test(values.password)) {\n              errors.password.push('uppercase')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'uppercase');\n            }\n            if (!/.{8,}/.test(values.password)) {\n              errors.password.push('at least 8')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'at least 8');\n            }\n            errors.password = errors.password.join(',')\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          signin &&\n            setTimeout(() => {\n              goToUser(serverUrl, values);\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          signup &&\n            setTimeout(() => {\n              createUser(serverUrl, values);\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field\n              placeholder=\"email\"\n              className=\"primary\"\n              type=\"email\"\n              name=\"email\"\n            />\n            <ErrorMessage name=\"email\" render={msg => <ErrorMsg>{msg}</ErrorMsg>} />\n            <Field\n              placeholder=\"password\"\n              className=\"primary\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage name=\"password\" render={msg => msg.split(',').map(m => <ErrorMsg key={m}>{m}</ErrorMsg>)} />\n            <Btn name=\"submit\" primary submit disabled={isSubmitting}>\n              {signin && 'sign in' || signup && 'sign up'}\n            </Btn>\n            <ErrorMessage name=\"submit\" />\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\n\nexport async function createUser(serverUrl, values) {\n  // send data to db\n  const res = await fetch(`${serverUrl}/api/createuser`,\n    {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(values)\n    });\n  const data = await res.json();\n  try {\n    console.log('Success:', data);\n  } catch (err) {\n    console.error(err);\n  }\n\n}\nexport async function goToUser(serverUrl, values) {\n\n}\n\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}