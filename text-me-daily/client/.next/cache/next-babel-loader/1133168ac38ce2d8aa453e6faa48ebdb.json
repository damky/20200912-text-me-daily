{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/signIn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Btn from '../components/btn';\nexport function ErrorMsg({\n  children\n}) {\n  return __jsx(\"div\", {\n    className: \"errorMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 10\n    }\n  }, children);\n}\nexport default function SignIn({\n  label,\n  type,\n  name\n}) {\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'email required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) {\n        errors.password = 'password required';\n      } else if (!/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n        errors.password = [];\n\n        if (!/(?=.*\\d)/) {\n          errors.password.push('numbers');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'numbers');\n        }\n\n        if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/) {\n          errors.password.push('special characters');\n        } else {\n          errors.password = errors.password.filter(m => m !== 'special characters');\n        }\n\n        if (errors.password.length <= 1) {\n          toString(errors.password);\n        } else {\n          errors.password.join(',');\n        }\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(Field, {\n    placeholder: \"email\",\n    className: \"primary\",\n    type: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(Field, {\n    placeholder: \"password\",\n    className: \"primary\",\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(ErrorMessage, {\n    name: \"password\",\n    render: msg => typeof msg === string ? msg.split(',').map(m => __jsx(ErrorMsg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 106\n      }\n    }, m)) : toString(msg),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), __jsx(Btn, {\n    primary: true,\n    submit: true,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"sign in\"))));\n}","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/signIn.js"],"names":["Formik","Form","Field","ErrorMessage","Btn","ErrorMsg","children","SignIn","label","type","name","email","password","values","errors","test","push","filter","m","length","toString","join","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","msg","string","split","map"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik'\nimport Btn from '../components/btn';\n\nexport function ErrorMsg({ children }) {\n  return <div className=\"errorMsg\">{children}</div>\n}\n\nexport default function SignIn({ label, type, name }) {\n  return (\n    <>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'email required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'password required'\n          } else if (!/^(?=.*\\d)(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])([!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]){8,}$/.test(values.password)) {\n            errors.password = [];\n            if (!/(?=.*\\d)/) {\n              errors.password.push('numbers')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'numbers');\n            }\n            if (!/(?=.*[!\\\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/) {\n              errors.password.push('special characters')\n            } else {\n              errors.password = errors.password.filter(m => m !== 'special characters');\n            }\n            if (errors.password.length <= 1) { toString(errors.password) } else { errors.password.join(',') }\n\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field\n              placeholder=\"email\"\n              className=\"primary\"\n              type=\"email\"\n              name=\"email\"\n            />\n            <ErrorMessage name=\"email\" />\n            <Field\n              placeholder=\"password\"\n              className=\"primary\"\n              type=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage name=\"password\" render={msg => typeof msg === string ? msg.split(',').map(m => <ErrorMsg>{m}</ErrorMsg>) : toString(msg)} />\n            <Btn primary submit disabled={isSubmitting}>\n              sign in\n            </Btn>\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}