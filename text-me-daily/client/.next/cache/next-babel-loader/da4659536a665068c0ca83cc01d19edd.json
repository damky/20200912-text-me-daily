{"ast":null,"code":"var _jsxFileName = \"/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/dashboard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Btn from '../components/btn'; // set up cookies\n\nexport default function Dashboard(ctx) {\n  const logOut = () => {\n    // cookies.remove('token', null);\n    // cookies.remove('refreshToken', null);\n    cookies.remove('status', null); // Router.push('/');\n  };\n\n  const cookies = new Cookies();\n  const token = cookies.get('token');\n\n  const fetcherAuth = url => axios.get(url, {\n    token: token\n  }).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR(`${ctx.serverUrl}/api/ping`, fetcherAuth);\n\n  if (error) {\n    console.error(error.response.data.msg);\n    logOut();\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    }, \"error loading. probably need to login again.\");\n  }\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, \"secret page\"), \" \", __jsx(Btn, {\n    primary: true,\n    onClick: () => logOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  }, \"log out\"), JSON.stringify(data));\n}\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Doug/Library/Mobile Documents/com~apple~CloudDocs/Development/20200912-text-me-daily/text-me-daily/client/pages/dashboard.js"],"names":["Cookies","useSWR","axios","Router","Btn","Dashboard","ctx","logOut","cookies","remove","token","get","fetcherAuth","url","then","res","data","error","serverUrl","console","response","msg","JSON","stringify","getStaticProps","props","process","env","SERVER"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CAEA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,QAAMC,MAAM,GAAG,MAAM;AACnB;AACA;AACAC,IAAAA,OAAO,CAACC,MAAR,CAAe,QAAf,EAAyB,IAAzB,EAHmB,CAInB;AACD,GALD;;AAMA,QAAMD,OAAO,GAAG,IAAIR,OAAJ,EAAhB;AACA,QAAMU,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAd;;AACA,QAAMC,WAAW,GAAGC,GAAG,IAAIX,KAAK,CAACS,GAAN,CAAUE,GAAV,EAAe;AAAEH,IAAAA,KAAK,EAAEA;AAAT,GAAf,EAAiCI,IAAjC,CAAsCC,GAAG,IAAIA,GAAG,CAACC,IAAjD,CAA3B;;AACA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBhB,MAAM,CAAE,GAAEK,GAAG,CAACY,SAAU,WAAlB,EAA8BN,WAA9B,CAA9B;;AACA,MAAIK,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBK,GAAlC;AACAd,IAAAA,MAAM;AACN,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAP;AACD;;AACD,MAAI,CAACS,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,OAA0B,MAAC,GAAD;AAAK,IAAA,OAAO,MAAZ;AAAa,IAAA,OAAO,EAAE,MAAMT,MAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1B,EAA8Ee,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA9E,CADF;AAGD;AAED,OAAO,eAAeQ,cAAf,CAA8BlB,GAA9B,EAAmC;AACxC,SAAO;AACLmB,IAAAA,KAAK,EAAE;AACLP,MAAAA,SAAS,EAAEQ,OAAO,CAACC,GAAR,CAAYC;AADlB;AADF,GAAP;AAKD","sourcesContent":["import { Cookies } from 'react-cookie';\nimport useSWR from 'swr';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Btn from '../components/btn'\n\n// set up cookies\n\nexport default function Dashboard(ctx) {\n  const logOut = () => {\n    // cookies.remove('token', null);\n    // cookies.remove('refreshToken', null);\n    cookies.remove('status', null);\n    // Router.push('/');\n  }\n  const cookies = new Cookies();\n  const token = cookies.get('token');\n  const fetcherAuth = url => axios.get(url, { token: token }).then(res => res.data);\n  const { data, error } = useSWR(`${ctx.serverUrl}/api/ping`, fetcherAuth);\n  if (error) {\n    console.error(error.response.data.msg)\n    logOut();\n    return <div>error loading. probably need to login again.</div>\n  }\n  if (!data) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <div><h2>secret page</h2> <Btn primary onClick={() => logOut()}>log out</Btn>{JSON.stringify(data)}</div>\n  )\n}\n\nexport async function getStaticProps(ctx) {\n  return {\n    props: {\n      serverUrl: process.env.SERVER\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}